USE IssueTrackingSystem;
GO

--If I want to create tables again
	DROP TABLE Employee; GO
	DROP TABLE Class; GO
	DROP TABLE [Prior]; GO
	DROP TABLE Issue; GO
	DROP TABLE Comment; GO
	DROP TABLE [Login]; GO
	DROP TABLE Project; GO
	DROP TABLE AccessLevel; GO
	DROP TABLE Groop; GO
	DROP TABLE IssueRelationMap; GO
	DROP TABLE ProjectIssueMap; GO
	DROP TABLE ClassProjectMap; GO
	DROP TABLE GroopEmployeeMap; GO
	DROP TABLE ProjectGroopMap; GO
	DROP TABLE LoginEmployeeMap; GO
--end

CREATE TABLE Employee (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Employee_rowguid DEFAULT (newid()),
		CONSTRAINT Employee_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(60) NOT NULL,
	Info VARCHAR(1000)
)
GO

CREATE TABLE Class (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Class_rowguid DEFAULT (newid()),
		CONSTRAINT Class_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(100) NOT NULL
		CONSTRAINT Class_Name UNIQUE,
	IsLeaf BIT NOT NULL
		CONSTRAINT DF_IsLeaf DEFAULT(1)
)
GO

CREATE TABLE [Prior] (
	ID uniqueidentifier NOT NULL
		CONSTRAINT DF_Prior_rowguid DEFAULT (newid()),
		CONSTRAINT Prior_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(60) NOT NULL
		CONSTRAINT Prior_Name UNIQUE
)
GO

CREATE TABLE Issue (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Issue_rowguid DEFAULT (newid()),
		CONSTRAINT Issue_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(60) NOT NULL,
	[Description] varchar(5000),
	DeadlineDate date,
	CreationDate datetime NOT NULL
		CONSTRAINT DF_ModifiedDate_Issue DEFAULT (getdate()),
	AdminID UNIQUEIDENTIFIER,
	ClassID UNIQUEIDENTIFIER,
	EmployeeID UNIQUEIDENTIFIER,
	PriorID UNIQUEIDENTIFIER,

	CONSTRAINT FK_Employee FOREIGN KEY (AdminID)
	REFERENCES Employee(ID),
	CONSTRAINT FK_Class FOREIGN KEY (ClassID)
	REFERENCES Class(ID),
	CONSTRAINT FK_Prior FOREIGN KEY (PriorID)
	REFERENCES Prior(ID)
) 
GO

CREATE TABLE Comment (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Comment_rowguid DEFAULT (newid()),
		CONSTRAINT Comment_ID PRIMARY KEY CLUSTERED (ID),
	AuthorID UNIQUEIDENTIFIER NOT NULL,
	IssueID UNIQUEIDENTIFIER NOT NULL,
	[Text] VARCHAR(5000) NOT NULL,
	CreationDate DATETIME NOT NULL
		CONSTRAINT DF_ModifiedDate_Comment DEFAULT (getdate()),

	CONSTRAINT FK_Author FOREIGN KEY (AuthorID)
	REFERENCES Employee(ID),
	CONSTRAINT FK_Issue FOREIGN KEY (IssueID)
	REFERENCES Issue(ID),
)
GO

CREATE TABLE [Login] (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Login_rowguid DEFAULT (newid()),
		CONSTRAINT Login_ID PRIMARY KEY CLUSTERED (ID),
	LoginName VARCHAR(100) NOT NULL,
	PassHash VARCHAR(256) NOT NULL
)
GO

CREATE TABLE Project (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Project_rowguid DEFAULT (newid()),
		CONSTRAINT Project_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(100) NOT NULL,
	Discription VARCHAR(5000),
	AdminID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_Admin FOREIGN KEY (AdminID)
	REFERENCES Employee(ID),
)
GO

CREATE TABLE AccessLevel (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_AccessLevel_rowguid DEFAULT (newid()),
		CONSTRAINT AccessLevel_ID PRIMARY KEY CLUSTERED (ID),
	[View] BIT NOT NULL
		CONSTRAINT DF_AccessLevel_View DEFAULT (1),
	Comment BIT NOT NULL
		CONSTRAINT DF_AccessLevel_Comment DEFAULT (1),
	MakeIssue BIT NOT NULL
		CONSTRAINT DF_AccessLevel_MakeIssue DEFAULT (1)
)
GO

CREATE TABLE Groop (
	ID UNIQUEIDENTIFIER NOT NULL
		CONSTRAINT DF_Groop_rowguid DEFAULT (newid()),
		CONSTRAINT Groop_ID PRIMARY KEY CLUSTERED (ID),
	Name VARCHAR(100) NOT NULL,
	Discription VARCHAR(1000) NOT NULL
)
GO

CREATE TABLE IssueRelationMap (
	ParentID UNIQUEIDENTIFIER NOT NULL,
	ChildID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_ParentID FOREIGN KEY (ParentID)
	REFERENCES Issue(ID),
	CONSTRAINT FK_ChildID FOREIGN KEY (ChildID)
	REFERENCES Issue(ID)
)
GO

CREATE TABLE ProjectIssueMap (
	ProjectID UNIQUEIDENTIFIER NOT NULL,
	IssueID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_ProjectID FOREIGN KEY (ProjectID)
	REFERENCES Project(ID),
	CONSTRAINT FK_IssueID FOREIGN KEY (IssueID)
	REFERENCES Issue(ID)
)
GO

CREATE TABLE ClassProjectMap (
	ClassID UNIQUEIDENTIFIER NOT NULL,
	ProjectID UNIQUEIDENTIFIER NOT NULL,
	AccessID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_ClassID FOREIGN KEY (ClassID)
	REFERENCES Class(ID),
	CONSTRAINT FK_ProjectID_CPM FOREIGN KEY (ProjectID)
	REFERENCES Project(ID),
	CONSTRAINT FK_Access FOREIGN KEY (AccessID)
	REFERENCES AccessLevel(ID)
)
GO

CREATE TABLE GroopEmployeeMap (
	GroopID UNIQUEIDENTIFIER NOT NULL,
	EmployeeID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_GroopID_GEM FOREIGN KEY (GroopID)
	REFERENCES Groop(ID),
	CONSTRAINT FK_EmployeeID FOREIGN KEY (EmployeeID)
	REFERENCES Employee(ID)
)
GO

CREATE TABLE ProjectGroopMap (
	ProjectID UNIQUEIDENTIFIER NOT NULL,
	GroopID UNIQUEIDENTIFIER NOT NULL,
	AccessID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_ProjectID_PGM FOREIGN KEY (ProjectID)
	REFERENCES Project(ID),
	CONSTRAINT FK_GroopID_PGM FOREIGN KEY (GroopID)
	REFERENCES Groop(ID),
	CONSTRAINT FK_AccessID_PGM FOREIGN KEY (AccessID)
	REFERENCES AccessLevel(ID)
)
GO

CREATE TABLE LoginEmployeeMap (
	LoginID UNIQUEIDENTIFIER NOT NULL,
	EmployeeID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT FK_Login_LEM FOREIGN KEY (LoginID)
	REFERENCES [Login](ID),
	CONSTRAINT FK_EmployeeID_LEM FOREIGN KEY (EmployeeID)
	REFERENCES Employee(ID)
)
GO